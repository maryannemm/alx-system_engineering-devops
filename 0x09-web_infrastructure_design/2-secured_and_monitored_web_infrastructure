### Three-Server Secured Web Infrastructure Design for www.foobar.com

#### Introduction:
The design focuses on ensuring security, encryption, and effective monitoring for hosting the website www.foobar.com.

#### Components of the Infrastructure:
1. **Server 1 (Load Balancer + Web Server)**:
   - **Load Balancer (HAProxy)**: Distributes incoming traffic across multiple servers for load balancing and high availability.
   - **Web Server (Nginx)**: Serves HTTP and HTTPS requests, acts as a reverse proxy, and terminates SSL connections.

2. **Server 2 (Application Server)**:
   - **Application Server (Node.js, Flask, etc.)**: Executes server-side application logic, processes dynamic requests, and interacts with the database.

3. **Server 3 (Database Server)**:
   - **Database Server (MySQL)**: Stores and manages website data, including user information, content, and configurations.

4. **Firewalls (3)**:
   - Firewalls are added to control and monitor incoming and outgoing network traffic to and from the servers. They help enforce security policies and protect against unauthorized access, malware, and other threats.

5. **SSL Certificate**:
   - An SSL certificate is installed on the Load Balancer to enable HTTPS encryption for secure communication between clients (users' browsers) and the website. It ensures data confidentiality and integrity by encrypting data transmitted over the network.

6. **Monitoring Clients (3)**:
   - Monitoring clients (e.g., Sumo Logic agents) are installed on each server to collect performance metrics, logs, and other relevant data. They send this data to a central monitoring service for analysis and visualization.

#### Specifics of the Infrastructure:
- **Firewalls**: Firewalls are added to provide an additional layer of security by filtering and monitoring incoming and outgoing traffic. They help mitigate security risks by enforcing access control policies and detecting and blocking malicious activity.
- **SSL Encryption (HTTPS)**: Traffic is served over HTTPS to encrypt data transmitted between clients and the website. HTTPS prevents eavesdropping, tampering, and data theft by encrypting sensitive information, such as user credentials and personal data, during transmission.
- **Monitoring**: Monitoring is essential for detecting and diagnosing issues, ensuring optimal performance, and maintaining the security and availability of the infrastructure. Monitoring tools collect data on server metrics, application performance, network activity, and security events to identify anomalies, troubleshoot problems, and proactively address potential issues.
- **Data Collection**: Monitoring clients continuously collect data on various aspects of server performance, including CPU usage, memory usage, disk I/O, network traffic, and application-specific metrics. They also capture logs and events generated by the operating system, web server, application server, and database server.
- **Web Server QPS Monitoring**:
   - To monitor web server QPS (Queries Per Second), you can configure monitoring tools to track the number of HTTP requests processed by the web server within a specific time frame. This can be achieved by analyzing server logs or using built-in metrics provided by the web server software.

#### Issues with the Infrastructure:
1. **Terminating SSL at the Load Balancer Level**:
   - Terminating SSL at the load balancer exposes decrypted traffic within the internal network, potentially compromising data confidentiality. It also increases the load on the load balancer, reducing its scalability and performance.
2. **Single MySQL Server for Writes**:
   - Having only one MySQL server capable of accepting write operations creates a single point of failure. If the database server fails, it could lead to data loss, downtime, and service disruption.
3. **Uniformity of Server Components**:
   - Deploying servers with identical components (same database, web server, and application server) may lead to homogeneity issues. If a vulnerability or software bug affects one server, it could potentially impact all servers simultaneously, increasing the risk of widespread service outages or security breaches. It's advisable to diversify server components to minimize the impact of potential vulnerabilities.
